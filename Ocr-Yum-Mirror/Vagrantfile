#
# LICENSE UPL 1.0
#
# Copyright (c) 2022 Oracle and/or its affiliates.
#
# Since: August, 2022
# Author: simon.coter@oracle.com
# Description: Creates a Yum and OCR mirror on an Oracle Linux virtual machine
# Optional plugins:
#     vagrant-env (use .env files for configuration)
#     vagrant-proxyconf (if you don't have direct access to the Internet)
#         see https://github.com/tmatilai/vagrant-proxyconf for configuration
#     vagrant-reload (allow VM reload during provisioning)
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#

# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Box metadata location and box name
BOX_URL = "https://oracle.github.io/vagrant-projects/boxes"
BOX_NAME = "oraclelinux/8"

# define hostname
NAME = "ocr-yum-mirror"

# UI object for printing information
ui = Vagrant::UI::Prefixed.new(Vagrant::UI::Colored.new, "vagrant")

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = BOX_NAME
  config.vm.box_url = "#{BOX_URL}/#{BOX_NAME}.json"
  config.vm.define NAME
  # Oracle port forwarding
  config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.network "forwarded_port", guest: 5000, host: 5000

  if Vagrant.has_plugin?("vagrant-env")
    ui.info "Loading environment from .env files"
    config.env.load(".env.local", ".env")
  end

  # change memory size
  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.name = NAME
    # add second disk device
    file_to_disk = File.realpath( "." ).to_s + "/disk.vdi"

    if ARGV[0] == "up"
       if ! File.exist?(file_to_disk)
         v.customize [
              'createhd',
              '--filename', file_to_disk,
              '--format', 'VDI',
              '--size', 50 * 1024 # 50 GB
              ]
       end
       v.customize [
            'storageattach', :id,
            '--storagectl', 'SATA Controller', # The name may vary
            '--port', 1, '--device', 0,
            '--type', 'hdd', '--medium',
            file_to_disk
            ]
    end

  end

  # add proxy configuration from host env - optional
  if Vagrant.has_plugin?("vagrant-proxyconf")
    ui.info "Getting Proxy Configuration from Host..."
    has_proxy = false
    ["http_proxy", "HTTP_PROXY"].each do |proxy_var|
      if proxy = ENV[proxy_var]
        ui.info "HTTP proxy: " + proxy
        config.proxy.http = proxy
        has_proxy = true
        break
      end
    end

    ["https_proxy", "HTTPS_PROXY"].each do |proxy_var|
      if proxy = ENV[proxy_var]
        ui.info "HTTPS proxy: " + proxy
        config.proxy.https = proxy
        has_proxy = true
        break
      end
    end

    if has_proxy
      # Only consider no_proxy if we have proxies defined.
      no_proxy = ""
      ["no_proxy", "NO_PROXY"].each do |proxy_var|
        if ENV[proxy_var]
          no_proxy = ENV[proxy_var]
          ui.info "No proxy: " + no_proxy
          no_proxy += ","
          break
        end
      end
      config.proxy.no_proxy = no_proxy + "localhost,.vagrant.vm,ocr-yum-mirror"
    end
  else
    ["http_proxy", "HTTP_PROXY", "https_proxy", "HTTPS_PROXY"].each do |proxy_var|
      if ENV[proxy_var]
        ui.warn 'To enable proxies in your VM, install the vagrant-proxyconf plugin'
        break
      end
    end
  end

  # VM hostname
  config.vm.hostname = NAME

  # Provision everything on the first run
  config.vm.provision "shell", path: "scripts/install.sh", privileged: false
  
  # Provision everything for OCNE yum-mirror
  config.vm.provision "shell", path: "scripts/yum-mirror.sh", privileged: false
  
  # Provision everything for OCNE ocr-mirror 
  config.vm.provision "shell", path: "scripts/ocr-mirror.sh", privileged: false

  # Share Yum mirror and OCNE mirror access
  config.vm.post_up_message = <<-MSG
    Installation complete, Oracle Linux 8 mirror ready to use!
    
    -----------------------------------------------------------
    Local Ocr-Yum-Mirror, accessible via:
      127.0.0.1 (localhost); or
      10.0.2.2 (inside VirtualBox VMs)
    
    URLs:
     - OracleLinux8 Yum Repo    - http://localhost:8080/yum/
     - OCNE 1.6 Docker Registry - https://localhost:5000/olcne/
    
    -----------------------------------------------------------
  MSG

end
